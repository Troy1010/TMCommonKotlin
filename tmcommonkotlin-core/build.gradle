import com.tminus1010.tmcommonkotlin.Shared

plugins {
    id("com.android.library")
    id("kotlin-android")
    id("kotlin-kapt")
    id("maven-publish")
}

android {
    compileSdk = Shared.targetSDK

    compileOptions.sourceCompatibility = JavaVersion.VERSION_1_8
    compileOptions.targetCompatibility = JavaVersion.VERSION_1_8
    kotlinOptions.jvmTarget = "1.8"
    // Allows adding to the kotlin package
    // This is useful for logz, b/c anything in the kotlin package is automatically imported everywhere.
    kotlinOptions.freeCompilerArgs += "-Xallow-kotlin-package"

    defaultConfig {
        minSdkVersion(Shared.minSDK)
        targetSdkVersion(Shared.targetSDK)

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        getByName("release") {
            minifyEnabled = false
            proguardFiles(
                    getDefaultProguardFile("proguard-android-optimize.txt"),
                    "proguard-rules.pro"
            )
        }
    }
    namespace 'com.tminus1010.tmcommonkotlin.core'
}

dependencies {
    // # Kotlin
    implementation("org.jetbrains.kotlin:kotlin-stdlib:1.7.21")
    implementation("androidx.annotation:annotation:1.2.0")
    // # JUnit
    testImplementation("junit:junit:4.13.2")
}

tasks.register("sourceJar", Jar) {
    from("src/main")
}

afterEvaluate {
    publishing {
        publications {
            register("mavenPublication", MavenPublication) {
                artifact bundleReleaseAar
                artifact sourceJar
                groupId = Shared.groupId
                artifactId = "tmcommonkotlin-core"
                version = rootProject.ext["versionName"]
                pom.withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')
                    configurations.implementation.allDependencies.each {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        def group = ""
                        if (it.group == "TMCommonKotlin")
                            group = Shared.groupId
                        else
                            group = it.group
                        dependencyNode.appendNode('groupId', group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}
